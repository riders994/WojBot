from collections import defaultdict

"""
Common functions that could be used amongst different Cogs
"""


def create_flag_dict(messages):
    """
    Digests a message, and produces a dictionary of all flags and the args associated with them.
    :param messages: str. A string of flags and args.
                          * '-' flags signal string arguments that denote user input
                          * '+' flags signal boolean arguments
    :return: dict. Dictionary of flags and args
    ex: Input: '-w 1:20, +o'
        Output: {'w': [1:20], 'o': [True]}
    """
    res = defaultdict(list)
    is_flagged = None
    for i, msg in enumerate(messages.split(' ')):
        if msg[0] == '-':
            flag = msg.strip('-')
            is_flagged = i + 1
        if i == is_flagged:
            res[flag].append(msg)
        if msg[0] == '+':
            res[msg.replace('+', '')].append(True)

    return res


def get_flag(flag, flag_map, flag_dict):
    """
    Returns the flags associated with the specific mapping for this user for the specified flag.
    :param flag: str. Should be name of a type of flag, and be a key in the map.
    :param flag_map: dict. This should come from the upper level bot. A mapping of different options for flag names that
                           league players can use for each command. This allows commands to have overlapping flags
                           without hurting functionality between them.
    :param flag_dict: dict. Dict generated by create_flag_dict.
    :return: Args. Depends on how content was generated.
    """
    for check in flag_map[flag]:
        res = flag_dict.get(check)
        if res:
            return res[0]
